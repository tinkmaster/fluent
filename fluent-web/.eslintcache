[{"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/index.js":"1","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/interfaces/Constant.js":"2","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/services/PipelineService.js":"3","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/services/ExecutionService.js":"4","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/reducer/RootReducer.js":"5","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/reportWebVitals.js":"6","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/App.js":"7","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/fetch/Fetch.js":"8","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/pipelines/PipelineDetails.js":"9","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/pages/pipelines/PipelinesPage.js":"10","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/ExecutionGraph.js":"11","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/PipelineGraph.js":"12","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/DataFlowNodeTypes.js":"13","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/operators/OperatorList.js":"14","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/pipelines/PipelineList.js":"15","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/executions/ExecutionHistoryList.js":"16","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/executions/ExecutionNodeInfo.js":"17","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/executions/ExecutionHistoryOverview.js":"18","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/pages/pipelines/PipelinesPageReducer.js":"19","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/services/OperatorService.js":"20","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/operators/OperatorDetails.js":"21","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/DataFlowEdgeType.js":"22","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/pages/pipelines/PipelinesPageReduxContainer.js":"23"},{"size":981,"mtime":1606741552419,"results":"24","hashOfConfig":"25"},{"size":1011,"mtime":1606946247884,"results":"26","hashOfConfig":"25"},{"size":3855,"mtime":1606945203194,"results":"27","hashOfConfig":"25"},{"size":3714,"mtime":1606940843443,"results":"28","hashOfConfig":"25"},{"size":213,"mtime":1606944621829,"results":"29","hashOfConfig":"25"},{"size":362,"mtime":1606661387031,"results":"30","hashOfConfig":"25"},{"size":1132,"mtime":1606921919155,"results":"31","hashOfConfig":"25"},{"size":1625,"mtime":1606889222458,"results":"32","hashOfConfig":"25"},{"size":2179,"mtime":1606909187667,"results":"33","hashOfConfig":"25"},{"size":8063,"mtime":1606944474166,"results":"34","hashOfConfig":"25"},{"size":2387,"mtime":1606943380381,"results":"35","hashOfConfig":"25"},{"size":3695,"mtime":1606941529345,"results":"36","hashOfConfig":"25"},{"size":3777,"mtime":1606946324401,"results":"37","hashOfConfig":"25"},{"size":2669,"mtime":1606944291346,"results":"38","hashOfConfig":"25"},{"size":1747,"mtime":1606941683900,"results":"39","hashOfConfig":"25"},{"size":4927,"mtime":1606936671992,"results":"40","hashOfConfig":"25"},{"size":8539,"mtime":1606937786357,"results":"41","hashOfConfig":"25"},{"size":1086,"mtime":1606934514752,"results":"42","hashOfConfig":"25"},{"size":4405,"mtime":1606945176690,"results":"43","hashOfConfig":"25"},{"size":2294,"mtime":1606943920135,"results":"44","hashOfConfig":"25"},{"size":6274,"mtime":1606944388581,"results":"45","hashOfConfig":"25"},{"size":1283,"mtime":1606941053496,"results":"46","hashOfConfig":"25"},{"size":2986,"mtime":1606944711176,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1j81gnz",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/index.js",[],["104","105"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/interfaces/Constant.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/services/PipelineService.js",["106","107"],"import {deleteRequest, get, post} from \"../fetch/Fetch\";\nimport {\n    DELETE_PIPELINE_ADDRESS,\n    GET_PIPELINE_ADDRESS,\n    LIST_PIPELINE_ADDRESS,\n    POST_PIPELINE_ADDRESS\n} from \"../interfaces/Constant\";\nimport {message} from 'antd';\nimport {listExecutionDiagram} from \"./ExecutionService\";\nimport {\n    editPipelineAction,\n    freshPipelineListAction,\n    updatePipelineGraph\n} from \"../pages/pipelines/PipelinesPageReducer\";\n\nexport function listPipelines() {\n    return dispatch => {\n        get(LIST_PIPELINE_ADDRESS).then(response => {\n            if (response.data.code === 200) {\n                dispatch(freshPipelineListAction(response.data.data))\n            }\n        })\n    }\n}\n\nexport function selectPipeline(name) {\n    return dispatch => {\n        get(GET_PIPELINE_ADDRESS.replace(\"{}\", name)).then(\n            response => {\n                if (response.data.code === 200) {\n                    dispatch(editPipelineAction(response.data.data));\n\n                    if (response.data.data && response.data.data.operators) {\n                        const pipeline = response.data.data\n                        let res = []\n                        let i = 80;\n                        const ids = Object.keys(pipeline.operators)\n                        ids.map(v => {\n                                res.push({\n                                    id: v,\n                                    data: {label: v + '-' + pipeline.operators[v], name: pipeline.operators[v]},\n                                    type: 'pipelineNode',\n                                    position: {x: 200 + i, y: i}\n                                });\n                                i = i + 100\n                            }\n                        )\n                        pipeline.connections.map(v => {\n                            const ns = v.split('->');\n                            res.push({\n                                id: ns[0] + '->' + ns[1],\n                                source: ns[0],\n                                target: ns[1],\n                                sourceHandler: null,\n                                targetHandler: null,\n                                type: 'custom',\n                                arrowHeadType: 'arrowclosed',\n                            })\n                        })\n\n                        console.log(res)\n\n                        dispatch(updatePipelineGraph(res))\n                    } else {\n                        dispatch(updatePipelineGraph([]))\n                    }\n\n                }\n            }\n        ).then(\n            () => {\n                dispatch(listExecutionDiagram(name));\n            }\n        )\n    }\n}\n\nexport function postPipeline(value) {\n    return dispatch => {\n        post(POST_PIPELINE_ADDRESS, value).then(\n            response => {\n                if (response.data.code === 200) {\n                    dispatch(listPipelines())\n                }\n            }\n        )\n    }\n}\n\nexport function updatePipeline(name, values) {\n    return dispatch => {\n        post(POST_PIPELINE_ADDRESS, values).then(\n            response => {\n                if (response.data.code === 200) {\n                    message.success(\"Update successfully.\")\n                }\n            }\n        )\n    }\n}\n\nexport function deletePipeline(name) {\n    return dispatch => {\n        deleteRequest(DELETE_PIPELINE_ADDRESS.replace(\"{}\", name)).then(\n            response => {\n                if (response.data.code === 200) {\n                    message.success('Delete successfully');\n                    get(LIST_PIPELINE_ADDRESS).then(response => {\n                        if (response.data.code === 200) {\n                            dispatch(freshPipelineListAction(response.data.data))\n                        }\n                    })\n                }\n            }\n        )\n    }\n}\n",["108","109"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/services/ExecutionService.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/reducer/RootReducer.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/reportWebVitals.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/App.js",[],["110","111"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/fetch/Fetch.js",["112","113"],"import axios from 'axios'\n\n\nlet config = {\n    // baseURL: '',\n    // transformRequest: [\n    //     // function (data) {\n    //     //     let ret = '';\n    //     //     for (let it in data) {\n    //     //         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n    //     //     }\n    //     //     return ret\n    //     // }\n    // ],\n    transformResponse: [\n        function (data) {\n            return data\n        }\n    ],\n    headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n    },\n    timeout: 10000,\n    responseType: 'json',\n    withCredentials: true\n};\n\nfunction getCookie(c_name)\n{\n    if (document.cookie.length>0)\n    {\n        let c_start=document.cookie.indexOf(c_name + \"=\")\n        if (c_start!=-1)\n        {\n            c_start=c_start + c_name.length+1\n            let c_end=document.cookie.indexOf(\";\",c_start)\n            if (c_end==-1) c_end=document.cookie.length\n            return unescape(document.cookie.substring(c_start,c_end))\n        }\n    }\n    return \"\"\n}\n\naxios.interceptors.request.use(function(res) {\n    //相应拦截器\n    let index = document.cookie.indexOf('x-token=');\n    if (index !== -1) {\n        if(getCookie('x-token').indexOf('.xx.') === -1){\n            res.headers['x-token'] = getCookie('x-token');\n        }\n    }\n    res.headers['Content-Type'] = 'application/json;charset=UTF-8'\n    return res;\n});\n\n\n\nexport function get(url) {\n    return axios.get(url, config)\n}\n\nexport function post(url, data) {\n    return axios.post(url, data, config)\n}\n\nexport function deleteRequest(url) {\n    return axios.delete(url, config)\n}\n",["114","115"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/pipelines/PipelineDetails.js",["116","117"],"import React, {Component} from 'react';\nimport {Button, Form, Input, Modal, Select} from \"antd\";\nconst tailLayout = {\n    wrapperCol: {offset: 16, span: 16},\n};\n\nconst layout = {\n    labelCol: {span: 6},\n    wrapperCol: {span: 17},\n};\nconst onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n};\n\nexport class PipelineDetails extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n    }\n\n    onFinish = (values) => {\n        // reorganize the data\n        this.props.postPipeline(values);\n        this.props.updateState('pipelineDetailsVisible', false, \"selectedPipeline\", null)\n    }\n\n    onCancel = () => {\n        this.props.updateState('pipelineDetailsVisible', false, \"selectedPipeline\", null)\n    }\n\n    render() {\n        return (\n            <Modal\n                title=\"PipelineDetails\"\n                visible={this.props.visible}\n                footer={null}\n                onCancel={this.onCancel}\n                destroyOnClose={true}\n            >\n                <Form\n                    preserve={false}\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={this.onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Pipeline Name\"\n                        name=\"name\"\n                        rules={[{required: true, message: 'Please input your pipeline name!'}]}\n                        initialValue={this.props.selectedOperator ? this.props.selectedOperator.name : null}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <div>\n                            <Button style={{\"marginRight\": 8}}\n                                    onClick={this.onCancel}>Cancel\n                            </Button>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Save\n                            </Button>\n                        </div>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n",["118","119"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/pages/pipelines/PipelinesPage.js",["120"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/ExecutionGraph.js",["121"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/PipelineGraph.js",["122","123","124"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/DataFlowNodeTypes.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/operators/OperatorList.js",["125"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/pipelines/PipelineList.js",["126"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/executions/ExecutionHistoryList.js",["127"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/executions/ExecutionNodeInfo.js",["128"],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/executions/ExecutionHistoryOverview.js",["129"],"import React, {Component} from \"react\";\nimport {Card, Col, Row, Statistic} from 'antd';\nimport './css/ExecutionHistoryOverview.css'\n\nexport class ExecutionHistoryOverview extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n    }\n\n    render() {\n        return (\n            <div className=\"execution-overview\">\n                <Card\n                    style={{height: '100%'}}\n                    title={<span className=\"execution-overview-card-title\">Execution Overview</span>}>\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            <Statistic title=\"Build Times\" value={112893}/>\n                        </Col>\n                        <Col span={8}>\n                            <Statistic title=\"Latest Build\" value={112893}/>\n                        </Col>\n                        <Col>\n                            <Statistic title=\"Last Failed\" value={112893} precision={2}/>\n                        </Col>\n                    </Row>\n                </Card>\n            </div>\n        )\n    }\n\n}\n","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/pages/pipelines/PipelinesPageReducer.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/services/OperatorService.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/operators/OperatorDetails.js",["130","131"],"import React, {Component} from 'react';\nimport {Button, Form, Input, Modal, Select} from \"antd\";\n\nconst tailLayout = {\n    wrapperCol: {offset: 16, span: 16},\n};\n\nconst layout = {\n    labelCol: {span: 6},\n    wrapperCol: {span: 17},\n};\n\n\nconst onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n};\n\nexport class OperatorDetails extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            isHttpType: this.props.selectedOperator ? 'HTTP_REQUEST' === this.props.selectedOperator.type : false\n        }\n    }\n\n    onFinish = (values) => {\n        // reorganize the data\n        let data = {}\n        data['name'] = values['name'].trim()\n        data['type'] = values['type'].trim()\n        data['params'] = {}\n        Object.keys(values).filter(k => k !== 'name' && k !== 'type').map(k => {\n            if (values[k]) {\n                values[k] = values[k].trim()\n            }\n            data['params'][k] = values[k]\n        })\n        console.log('Success:', data);\n        this.props.postOperator(Object.assign({}, data));\n        this.props.updateState('operatorDetailsVisible', false, \"selectedOperator\", null)\n    }\n\n    onCancel = () => {\n        this.setState({isHttpType: false})\n        this.props.updateState('operatorDetailsVisible', false, \"selectedOperator\", null)\n    }\n\n\n    render() {\n        console.log(this.props)\n\n        return (\n            <Modal\n                title=\"OperatorDetails\"\n                visible={this.props.visible}\n                footer={null}\n                onCancel={this.onCancel}\n                destroyOnClose={true}\n            >\n                <Form\n                    preserve={false}\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={this.onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Operator Name\"\n                        name=\"name\"\n                        rules={[{required: true, message: 'Please input your username!'}]}\n                        initialValue={this.props.selectedOperator ? this.props.selectedOperator.name : null}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Operator Type\"\n                        name=\"type\"\n                        rules={[{required: true, message: 'Please select operator type!'}]}\n                        initialValue={this.props.selectedOperator ? this.props.selectedOperator.type : null}\n                    >\n                        <Select onChange={(value) => {\n                            this.setState({isHttpType: 'HTTP_REQUEST' === value})\n                        }}>\n                            <Select.Option value=\"HTTP_REQUEST\">HTTP_REQUEST</Select.Option>\n                            <Select.Option value=\"DATA_VALIDATION\">DATA_VALIDATION</Select.Option>\n                        </Select>\n                    </Form.Item>\n                    {(this.props.selectedOperator && 'HTTP_REQUEST' === this.props.selectedOperator.type) || this.state.isHttpType ?\n                        <HttpParameters\n                            params={this.props.selectedOperator ? this.props.selectedOperator.params : null}/> : ''}\n                    <Form.Item {...tailLayout}>\n                        <div>\n                            <Button style={{\"marginRight\": 8}}\n                                    onClick={this.onCancel}>Cancel\n                            </Button>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Save\n                            </Button>\n                        </div>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nclass HttpParameters extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form.Item\n                    label=\"HTTP URI\"\n                    name=\"uri\"\n                    rules={[{required: true, message: 'Please enter url'}]}\n                    initialValue={this.props.params ? this.props.params.uri : null}\n                >\n                    <Input placeholder=\"https://google.com\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"HTTP Path\"\n                    name=\"path\"\n                    rules={[{required: true, message: 'Please enter the path'}]}\n                    initialValue={this.props.params ? this.props.params.path : null}\n                >\n                    <Input placeholder=\"/api/v1/some\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"HTTP Method\"\n                    name=\"method\"\n                    rules={[{required: true, message: 'Please select http method'}]}\n                    initialValue={this.props.params ? this.props.params.method : null}\n                >\n                    <Select>\n                        <Select.Option value=\"GET\">GET</Select.Option>\n                        <Select.Option value=\"POST\">POST</Select.Option>\n                        <Select.Option value=\"PUT\">PUT</Select.Option>\n                        <Select.Option value=\"DELETE\">DELETE</Select.Option>\n                        <Select.Option value=\"OPTION\">OPTION</Select.Option>\n                        <Select.Option value=\"TRACE\">TRACE</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    label=\"HTTP Headers\"\n                    name=\"headers\"\n                    initialValue={this.props.params ? this.props.params.headers : null}\n\n                >\n                    <Input.TextArea placeholder=\"key1: value1&#13;key2: value2\" autoSize={true}/>\n                </Form.Item>\n                <Form.Item\n                    label=\"RequestBody\"\n                    name=\"body\"\n                    initialValue={this.props.params ? this.props.params.body : null}\n\n                >\n                    <Input.TextArea placeholder=\"{ key: value }\" autoSize={true}/>\n                </Form.Item>\n            </div>\n        )\n    }\n}\n","/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/components/graph/DataFlowEdgeType.js",[],"/Users/eric.lee/Documents/workspace/fluent/fluent-web/src/pages/pipelines/PipelinesPageReduxContainer.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":38,"column":35,"nodeType":"138","messageId":"139","endLine":38,"endColumn":37},{"ruleId":"136","severity":1,"message":"137","line":48,"column":52,"nodeType":"138","messageId":"139","endLine":48,"endColumn":54},{"ruleId":"132","replacedBy":"140"},{"ruleId":"134","replacedBy":"141"},{"ruleId":"132","replacedBy":"142"},{"ruleId":"134","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":33,"column":20,"nodeType":"146","messageId":"147","endLine":33,"endColumn":22},{"ruleId":"144","severity":1,"message":"148","line":37,"column":22,"nodeType":"146","messageId":"147","endLine":37,"endColumn":24},{"ruleId":"132","replacedBy":"149"},{"ruleId":"134","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":37,"nodeType":"153","messageId":"154","endLine":2,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":17,"column":5,"nodeType":"157","messageId":"158","endLine":19,"endColumn":6},{"ruleId":"132","replacedBy":"159"},{"ruleId":"134","replacedBy":"160"},{"ruleId":"155","severity":1,"message":"156","line":16,"column":5,"nodeType":"157","messageId":"158","endLine":18,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":9,"column":5,"nodeType":"157","messageId":"158","endLine":11,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":11,"column":5,"nodeType":"157","messageId":"158","endLine":13,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":31,"column":62,"nodeType":"138","messageId":"139","endLine":31,"endColumn":64},{"ruleId":"136","severity":1,"message":"137","line":45,"column":62,"nodeType":"138","messageId":"139","endLine":45,"endColumn":64},{"ruleId":"155","severity":1,"message":"156","line":8,"column":5,"nodeType":"157","messageId":"158","endLine":17,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":8,"column":5,"nodeType":"157","messageId":"158","endLine":16,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":11,"column":5,"nodeType":"157","messageId":"158","endLine":21,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":8,"column":5,"nodeType":"157","messageId":"158","endLine":10,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":7,"column":5,"nodeType":"157","messageId":"158","endLine":9,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":32,"column":77,"nodeType":"138","messageId":"139","endLine":32,"endColumn":79},{"ruleId":"155","severity":1,"message":"156","line":109,"column":5,"nodeType":"157","messageId":"158","endLine":111,"endColumn":6},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["161"],["162"],["161"],["162"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["161"],["162"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["161"],["162"],"no-global-assign","no-unsafe-negation"]